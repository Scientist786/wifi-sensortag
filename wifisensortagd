#!/usr/bin/perl
#
# New wifi-sensortagd
# trying to make it better

$debug = 1;
if (!$debug) {
  use Proc::Daemon;
  $pid = Proc::Daemon::Init;
  exit if $pid;
}



use Config::Simple;
use Net::Ping;

Config::Simple->import_from('./wifisensortagd.cfg', \%Config);

my $mqttserver= $Config{"Mqttserver"};
my $sensorline = $Config{"Sensors"};
my $locationline=$Config{"Locations"};
my $hostname = `hostname -f`;
my $site = $Config{"Site"};
chomp $hostname;
my $readurl = "param_sensortag_poll.html";
my $confurl = "param_sensortag_conf.html";

if ($mqttserver) {
  $mqttpub = "mosquitto_pub -h $mqttserver -p 1883 ";
  system("$mqttpub -t /$site/$hostname/sensortagd/status -m started");
}

my $i=0;
while ($sensorline->[$i]) {
  $sensors{$sensorline->[$i]} = 1;
  $location{$sensorline->[$i]} = $locationline->[$i];
  $sensorcount++;
  $i++;
}

$sleeptime = 60*3;

while (!$found) {
  foreach $addr (keys %sensors) {
    # Check if sensortag is alive
    #
    $detected{$addr} = 0;
    my $thisid = &GetDeviceId($addr);
    if ($thisid) {
      $detected{$addr} = 1;
      # get characteristics
      $alive{$addr} = $thisid;
      $location{$thisid} = $location{$addr};
      $found = 1;
      # &SetupDevice($addr,1+2+4+32);
    }
  }
}


$count=1;
# Main loop
while (1) {
  my $loopstart = time;
  # check if undetected devices are still there
  foreach $addr (keys %detected) {
    if (!$detected{$addr}) {
      my $thisid = &GetDeviceId($addr);
      if ($thisid) {
        $detected{$addr} = 1;
        # get characteristics
        $alive{$addr} = $thisid;
        $location{$thisid} = $location{$addr};
        # &SetupDevice($addr,1+2+4+32);
      }
    }
  }

  foreach $addr (keys %alive) {
    my $temp1, $temp2, $temp3, $temp;
    my $hum;
    my $pressure;
    my $light;
    next if !$detected{$addr};
    if (! &isAlive($addr)) {
      $detected{$addr} = 0;
      next;
    }
    open(F,"wget -q -O - $addr/$readurl |");
    while (<F>) {
# <p id="tmp">0844 0B6C 16.53 22.84</p>
# <p id="hum">63DC 61C4 39.01 23.01</p>
# <p id="bar">5ED2C0 7E8500 23.8 999.48</p>
# <p id="gyr">FF40 FF93 FFE7 -1.47 -0.83 -0.19</p>
# <p id="acc">103F FFEF FF8A 1.02 -0.00 -0.03</p>
# <p id="opt">0476 11.42</p>
# <p id="mag">0128 0125 FF57 296 293 -169</p>
# <p id="key">0</p>
# <p id="syn">6272</p>

      /tmp.*\s([0-9\.]+)</ && ($temp1 = $1);
      /hum.*\s([0-9\.]+)\s+([0-9\.]+)</ && ($hum=$1, $temp2=$2);
      /bar.*\s([0-9\.]+)\s+([0-9\.]+)</ && ($temp3=$1, $pressure=$2);
      /opt.*\s([0-9\.]+)</ && ($light = $1);
      
    }

    $temp = ($temp1 + $temp2 + $temp3) / 3.0;
    print "Temp = $temp1 $temp2 $temp3 $temp\n" if $debug;
    print "Hum  = $hum\n" if $debug;
    print "Pres = $pressure\n" if $debug;
    print "Light= $light\n" if $debug;

    &sendToServer($count,$alive{$addr},$pressure,$hum,$temp,$light);
    $count++;
  }

  my $howlong =  $sleeptime - (time - $loopstart);
  sleep $howlong if ($howlong > 0);
}

sub isAlive {
  my $this = shift;

  my $p = Net::Ping->new();
  return 0 if !$p->ping($this);
  return 1;
}

sub GetDeviceId {
  my $this = shift;

  my $p = Net::Ping->new();
  return if !$p->ping($this);
  $p->close();

  open(F,"wget -q -O - $this/$confurl |");
  while (<F>) {
    if (/mac.*>([0-9A-F:]+)</) {
      close F;
      return $1;
    }
  }
  close F;
}

sub SetupDevice {
  my $device = shift;
  my $services = shift;

  system("wget --post-data=\"__SL_P_UCF=$services\" $device");
}

sub sendToServer {
  my $c = shift;
  my $id = shift;
  my $pres = shift;
  my $hum  = shift;
  my $temp = shift;
  my $light = shift;

  if ($light) {
    if ($mqttpub) {
      my $path = "/$site/" . $location{$id} . "/light";
      system("$mqttpub -t $path -m $light");
    }
  }

  if ($pres) {
    if ($mqttpub) {
      my $path = "/$site/" . $location{$id} . "/airpressure";
      system("$mqttpub -t $path -m $pres");
    }
  }

  if ($hum) {
    if ($mqttpub) {
      my $path = "/$site/" . $location{$id} . "/humidity";
      system("$mqttpub -t $path -m $hum");
    }
  }

  if ($temp) {
    if ($mqttpub) {
      my $path = "/$site/" . $location{$id} . "/temperature";
      system("$mqttpub -t $path -m $temp");
    }
  }
}
